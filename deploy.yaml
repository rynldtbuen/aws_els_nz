- name: Create AWS resources
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Generate an SSH keypair with specified path and the mode if file
      community.crypto.openssh_keypair:
        path: "~/.ssh/id_rsa"
        mode: 0600

    - name: Create key pair using key in ~/.ssh/id_rsa.pub
      amazon.aws.ec2_key:
        name: els_nz_keypair
        key_material: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Create secuirty group for the instances
      amazon.aws.ec2_group:
        name: els_nz_security_group
        description: Event Learning Series - New Zealand - Security Group
        vpc_id: vpc-058771b8cfe0fc266
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/24 # allow http from anywhere
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: sg-0b349d9838dfed8f2 # cloud9 instance sg
          - proto: tcp
            from_port: 2049
            to_port: 2049
            group_id: sg-0c548fcf9e1238ffe # els_nz_security_group
      register: ec2_security_group

    - name: Create EFS for out ec2 instance
      community.aws.efs:
        name: els_nz_efs_intance_1
        targets:
          - subnet_id: subnet-0dd9693c91a0d9172
            security_groups:
              - sg-029346c49fff622fc # default sg
              - sg-0c548fcf9e1238ffe # els_nz_security_group
          - subnet_id: subnet-08011c2e9422bd36c
            security_groups:
              - sg-029346c49fff622fc # default sg
              - sg-0c548fcf9e1238ffe # els_nz_security_group
          - subnet_id: subnet-06e41cd34c2b5f2cf
            security_groups:
              - sg-029346c49fff622fc # default sg
              - sg-0c548fcf9e1238ffe # els_nz_security_group
        state: present
      register: result


    - name: Set filesystem address
      set:
        filesystem_address: "{{ result.filesystem_address }}"

    - name: Create new ec2 instance
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        key_name: els_nz_keypair
        vpc_subnet_id: subnet-06e41cd34c2b5f2cf
        instance_type: t2.micro
        security_group: els_nz_security_group
        network:
          assign_public_ip: true
        image_id: ami-0d539270873f66397 # image id of Ubuntu 20.04 amd64 server
        tags:
          Environment: Testing
      loop:
        - els_nz_ec2_instance_100
      register: results

    - name: Add newly created ec2 intances to in-memory inventory
      ansible.builtin.add_host:
        name: "{{ item.instances[0].private_dns_name }}"
        groups: web-servers
        ansible_user: ubuntu
      loop: "{{ results.results }}"

- name: Configure Web Servers
  hosts: web-servers
  become: yes
  gather_facts: no

  tasks:
    - name: Wait for ec2 intances to fully boot up
      ansible.builtin.wait_for_connection:
        delay: 5

    - name: Update repositories cache and install required packages
      apt:
        pkg:
          - apache2
          - php
          - mysql-client
          - libapache2-mod-php
          - php-mysql
          - php-curl
          - php-xml
          - awscli
          - nfs-common
        update_cache: yes
      register: result
      when: "{{ result.changed }}"

    - name: Restart apache2 service
      ansible.builtin.systemd:
        name: apache2.service
        state: restarted

    - name: Create a directory name efs in root directory
      ansible.builtin.file:
        path: /efs
        state: directory
        owner: ubuntu
        recurse: yes

    - name: Mount efs
      ansible.posix.mount:
        path: /efs
        src: "{{ hostvars['localhost']['filesystem_address'] }}"
        fstype: nfs4
        opts: "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2"
        state: mounted
